<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">  
    
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器以及Exception下的包 -->  
    <context:component-scan base-package="com.migu.resume.controller,com.migu.resume.Exception" />
    
    <!-- 启动springmvc注解功能 -->  
   	<mvc:annotation-driven validator="validator">
   		<mvc:message-converters>
   			<ref bean="fastJsonHttpMessageConverter"/>
   		</mvc:message-converters>
   	</mvc:annotation-driven>
   	
   	<!-- 添加数据校验规则 -->
   	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass"  value="org.hibernate.validator.HibernateValidator"/>
        <!--不设置则默认为classpath下的 ValidationMessages.properties -->
        <property name="validationMessageSource" ref="validatemessageSource"/>
    </bean>
    
    <bean id="validatemessageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">  
        <property name="basename" value="classpath:validateMsg"/>  
        <property name="fileEncodings" value="utf-8"/>  
        <property name="cacheSeconds" value="864000"/>
        <property name="useCodeAsDefaultMessage" value="true"/>  
    </bean>
   	
    <bean id="fastJsonHttpMessageConverter" 
    	class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
				<value>text/plain;charset=UTF-8</value><!--避免IE执行AJAX时，返回JSON出现下载文件 -->
			</list>
		</property>
		<property name="features">
			<array value-type="com.alibaba.fastjson.serializer.SerializerFeature">
				<value>DisableCircularReferenceDetect</value>
			</array>
		</property>
	</bean>
	 
    <!-- <bean id="mappingJacksonHttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
            	<value>application/json;charset=UTF-8</value>
                <value>text/html;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean> --> 
    
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  
        <property name="prefix" value="/WEB-INF/jsp/" />  
        <property name="suffix" value=".jsp" />  
    </bean>  
      
    <!-- 文件上传配置 -->  
    <bean id="multipartResolver"    
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        <!-- 默认编码 -->  
        <property name="defaultEncoding" value="utf-8" />    
        <!-- 文件大小最大值100M -->  
        <property name="maxUploadSize" value="10485760" />    
        <!-- 内存中的最大值 -->  
        <property name="maxInMemorySize" value="40960" />    
    </bean>
    
    <!-- 托管BeanFactory,便于普通JavaBean获取bean -->
    <bean class="com.migu.resume.util.BeanFactory" />
</beans>  
